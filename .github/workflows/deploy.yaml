name: Deploy Build

on:
  workflow_run:
    workflows: [TESTING]
    types: [completed]
  repository_dispatch:
   types: [trigger-terraform-plan]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - name: simulated build
      run: |
        export VERSION=$(head -n 1 ./RELEASE_NOTES.md)
        cd ./cmd/api
        cp -R * ../..
        cd ../..
        zip api.zip bookings hello-world
        echo "JEREMY"

    - name: config aws
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.GHUB_ACTIONS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.GHUB_ACTIONS_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: cp to s3 
      run: |
        # echo "the\$!i\$theBe\$t"
        # export password="the\$!i\$theBe\$t|t"
        # echo $password
        # echo "the$!i$theBe$t-2"
        # export password2="the$!i$theBe$t-2"
        # echo $password2
        echo "${{ secrets.TEST1 }}"
        echo "${{ secrets.TEST2 }}"
        export VERSION=$(head -n 1 ./RELEASE_NOTES.md)
        touch bucket_key.md
        touch tf_key.sh
        chmod +x tf_key.sh
        cat <<\EOF >> tf_key.sh
        #!/bin/bash
        VERSION=$(head -n 1 ./RELEASE_NOTES.md)
        EXISTS=$(aws s3 ls s3://jeremy-code-deploy-dev-useast1/api/$VERSION | awk '{if (NR!=2) {print substr($2,1,  length($2)-1); exit}}')
        COUNT=$(aws s3 ls --recursive s3://jeremy-code-deploy-dev-useast1/api/$VERSION | wc -l | awk '{print $1}')
        if [ -z "$EXISTS" ]; then
        aws s3 cp api.zip s3://jeremy-code-deploy-dev-useast1/api/$VERSION/api.zip
        echo $VERSION > bucket_key.md
        else 
          if [ "$COUNT" -ge "1" ]; then 
          aws s3 cp api.zip s3://jeremy-code-deploy-dev-useast1/api/$VERSION-${COUNT}/api.zip
          echo $VERSION-$COUNT > bucket_key.md
          fi
        fi
        cat bucket_key.md
        EOF
        ./tf_key.sh
        echo "this is the current state of bucket_key.md version"
        cat bucket_key.md
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: bucket_key 
        path: |
          ./bucket_key.md
            
  check:
    runs-on: ubuntu-latest
    needs: [deploy]
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - name: Download a single artifact
      uses: actions/download-artifact@v3
      with:
        name: bucket_key
    - name: see if file is available 
      run: |
        ls -alt 
        export BUCKET_KEY=$(head -n 1 ./bucket_key.md)
        echo "${BUCKET_KEY}"
        echo "############### ${BUCKET_KEY} ######################"

  terraform:
    runs-on: ubuntu-latest
    needs: [check]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.GHUB_ACTIONS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.GHUB_ACTIONS_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Initialize Terraform
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -out=tfplan

    - name: Save Plan Output
      id: plan
      run: echo "::set-output name=plan::$(cat tfplan)"
    
    - name: Display Plan Summary
      run: cat tfplan        
