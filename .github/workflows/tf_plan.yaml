name: Terraform Plan

on:
    issue_comment:
      types: [created,edited]
      
jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/dev')
    steps:
    - name: Download Plan Artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: test.yaml
        name: branch-name
        workflow_conclusion: success
        github_token: ${{secrets.GITHUB_TOKEN}}
        path: BRANCH_NAME
  
    - name: Use branch name
      run: echo "BRANCH_NAME=$(cat BRANCH_NAME/BRANCH_NAME)" >> $GITHUB_ENV

    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        ref: ${{ env.BRANCH_NAME }}
      
    - name: config aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.GHUB_ACTIONS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.GHUB_ACTIONS_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set Up TF
      uses: hashicorp/setup-terraform@v2
      with: 
        terraform_version: 1.5.0

    - name: Terraform Plan for display
      id: dev_plan
      run: |
        cd terraform/
        terraform init
        terraform plan -input=false -no-color -out=plan.tfout \
        && terraform show -no-color plan.tfout

    - name: Plan for Github Comment
      if: steps.dev_plan.outcome == 'success'
      run: |
        echo '${{ steps.dev_plan.outputs.stdout || steps.dev_plan.outputs.stderr }}' \
        | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > plan.txt

    - name: Plan Env
      if: steps.dev_plan.outcome == 'success'
      run: |
        PLAN=$(cat plan.txt)
        echo "PLAN<<EOF" >> $GITHUB_ENV
        echo "$PLAN" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Post Plan and Apply to GitHub PR
      if: steps.dev_plan.outcome == 'success'
      uses: mshick/add-pr-comment@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-repeats: true
        message: |
          Terraform Plan **Production**:

          ```diff
          ${{ env.PLAN }}
          ```

          ```
          ${{ steps.dev_plan.outputs.stdout }}
          ```

    - name: Post Plan Failure
      if: steps.dev_plan.outcome == 'failure'
      uses: mshick/add-pr-comment@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-repeats: true
        message: |
          Plan failed for **Production**:

          ```
          ${{ steps.dev_plan.outputs.stderr }}
          ```
        
    - name: Archive Plan File
      uses: actions/upload-artifact@v2
      with:
        name: plan
        path: terraform/plan.tfout

