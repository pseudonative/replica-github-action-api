name: Terraform Plan

on:
    issue_comment:
      types: [created]
    
jobs:
  terraform:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/dev')
    steps:
    - uses: ./.github/workflows/aws_auth.yaml@staging
      with:
        repository: pseudonative/replica-github-action-api
    
    - uses: ./.github/workflows/checkout_repo.yaml@staging
      with:
        repository: pseudonative/replica-github-action-api

    - name: Set Up TF
      uses: hashicorp/setup-terraform@v2
      with: 
        terraform_version: 1.5.0

    - name: Terraform Plan for display
      id: dev_plan
      run: |
        cd terraform/
        terraform init
        terraform plan -input=false -no-color -out=plan.tfout \
        && terraform show -no-color plan.tfout

    - name: Set Plan for Display
      if: steps.dev_plan.outcome == 'success'
      run: |
        echo '${{ steps.dev_plan.outputs.stdout || steps.dev_plan.outputs.stderr }}' \
        | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > plan.txt

    - name: Plan Env
      if: steps.dev_plan.outcome == 'success'
      run: |
        PLAN=$(cat plan.txt)
        echo "PLAN<<EOF" >> $GITHUB_ENV
        echo "$PLAN" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Post Plan and Apply to GitHub PR
      if: steps.dev_plan.outcome == 'success'
      uses: mshick/add-pr-comment@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        message: |
          Terraform Plan **Production**:

          ```diff
          ${{ env.PLAN }}
          ```

          ```
          ${{ steps.dev_plan.outputs.stdout }}
          ```

    - name: Post Plan Failure
      if: steps.dev_plan.outcome == 'failure'
      uses: mshick/add-pr-comment@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        message: |
          Plan failed for **Production**:

          ```
          ${{ steps.dev_plan.outputs.stderr }}
          ```
        
    - name: Archive Plan File
      uses: actions/upload-artifact@v2
      with:
        name: plan
        path: terraform/plan.tfout

