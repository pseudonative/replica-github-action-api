name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    brances: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - name: simulated build
      run: |
        export VERSION=$(head -n 1 ./RELEASE_NOTES.md)
        cd ./cmd/api
        cp -R * ../..
        cd ../..
        zip api.zip bookings hello-world

    - name: config aws
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.GHUB_ACTIONS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.GHUB_ACTIONS_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: cp to s3 
      run: |
        export VERSION=$(head -n 1 ./RELEASE_NOTES.md)
        touch bucket_key.md
        touch tf_key.sh
        chmod +x tf_key.sh
        cat <<\EOF >> tf_key.sh
        #!/bin/bash
        VERSION=$(head -n 1 ./RELEASE_NOTES.md)
        EXISTS=$(aws s3 ls s3://jeremy-code-deploy-dev-useast1/api/$VERSION | awk '{if (NR!=2) {print substr($2,1,  length($2)-1); exit}}')
        COUNT=$(aws s3 ls --recursive s3://jeremy-code-deploy-dev-useast1/api/$VERSION | wc -l | awk '{print $1}')
        if [ -z "$EXISTS" ]; then
        aws s3 cp api.zip s3://jeremy-code-deploy-dev-useast1/api/$VERSION/api.zip
        else 
          if [ "$COUNT" -ge "1" ]; then 
          aws s3 cp api.zip s3://jeremy-code-deploy-dev-useast1/api/$VERSION-${COUNT}/api.zip
          fi
        fi
        echo $VERSION-$COUNT > bucket_key.md
        cat bucket_key.md
        EOF
        ./tf_key.sh
        echo "this is the current state of bucket_key.md"
        cat bucket_key.md

  check:
    runs-on: ubuntu-latest
    needs: [deploy]
    timeout-minutes: 15
    steps:
    - name: see if file is available 
      run: |
        ls -alt 
        ls -alt | grep -Ei bucket 



        
